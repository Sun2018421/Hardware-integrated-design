C51 COMPILER V9.60.0.0   MAIN                                                              12/30/2020 23:09:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE main.c LARGE ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Final) DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "lcd.h"
   2          #include "reg52.h"
   3          
   4          
   5          typedef unsigned int u16;   //对数据类型进行声明定义
   6          typedef unsigned char u8;
   7          
   8          #define MAXLEN 15
   9          char Opcodepoint = -1;  // +1 push 指向当前位置
  10          char operandpoint = -1 ;
  11          float Operand[MAXLEN];  //Operadn[MAXLEN-1]为整数部分临时保存位置
  12          #define temp Operand[MAXLEN-1]
  13          u8 Opcode[MAXLEN];
  14          u8 times = 1;  //转换成float的长度标记
  15          u8 Decimalpoint = 0 ;//有无小数点
  16          
  17          void InitOpcodeStack(){
  18   1        Opcodepoint++;
  19   1        Opcode[Opcodepoint] = 6;
  20   1      }
  21          /*
  22            优先级表
  23            -1 = < , 0 = = ,1 = >,2 = error
  24            + 0,- 1* 2,/ 3,( 4,) 5,# 6
  25            = -> #
  26            */
  27          char OpPri[7][7]={  
  28            {1,1,-1,-1,-1,1,1},
  29            {1,1,-1,-1,-1,1,1},
  30            {1,1,1,1,-1,1,1},
  31            {1,1,1,1,-1,1,1},
  32            {-1,-1,-1,-1,-1,0,2},
  33            {1,1,1,1,2,1,1},
  34            {-1,-1,-1,-1,-1,2,0}
  35          };
  36          
  37          void delay(u16 i){  
  38   1        while(i--);
  39   1      }
  40          /*
  41            P17->H1
  42            P16->H2
  43            P15->H3
  44            P14->H4
  45          
  46            P13->L1
  47            P12->L2
  48            P11->L3
  49            P10->L4
  50          */
  51          #define GPIO_KEY P1 //  0000 0000
  52                                
  53          u8 isNum(u8 num){
  54   1        if((num>=0)&&(num<=9))
C51 COMPILER V9.60.0.0   MAIN                                                              12/30/2020 23:09:20 PAGE 2   

  55   1          return 1;
  56   1        return 0;
  57   1      }
  58          
  59          u8 KeyDown(void)
  60          {
  61   1        u8 KeyValue= 127;
  62   1        char a=0;
  63   1        GPIO_KEY=0x0f;
  64   1        if(GPIO_KEY!=0x0f)//读取按键是否按下
  65   1        {
  66   2          delay(1000);//延时10ms进行消抖
  67   2          if(GPIO_KEY!=0x0f)//再次检测键盘是否按下
  68   2          { 
  69   3            //测试列
  70   3            GPIO_KEY=0X0F;
  71   3            switch(GPIO_KEY)
  72   3            {
  73   4              case(0X07): KeyValue=0;break;
  74   4              case(0X0b): KeyValue=1;break;
  75   4              case(0X0d): KeyValue=2;break;
  76   4              case(0X0e): KeyValue=3;break;
  77   4            }
  78   3            //测试行
  79   3            GPIO_KEY=0XF0;
  80   3            switch(GPIO_KEY)
  81   3            {
  82   4              case(0X70): KeyValue=KeyValue;break;
  83   4              case(0Xb0): KeyValue=KeyValue+4;break;
  84   4              case(0Xd0): KeyValue=KeyValue+8;break;
  85   4              case(0Xe0): KeyValue=KeyValue+12;break;
  86   4            }
  87   3            
  88   3          }
  89   2        }
  90   1        //delay(1000);
  91   1        while((a<50)&&(GPIO_KEY!=0xf0))  //检测按键松手检测
  92   1        {
  93   2          delay(140);
  94   2          a++;
  95   2        }
  96   1        return KeyValue;
  97   1      }
  98          
  99          
 100          void Error(){
 101   1        
 102   1      }
 103          void handleNum(u8 num){
 104   1        u8 i ;
 105   1        float afterpoint = 0;
 106   1        afterpoint += num;
 107   1        if(Decimalpoint!=1){    //没有小数点
 108   2            temp = temp *10 + num;
 109   2        }
 110   1        else{
 111   2            for(i=0;i<times;i++){
 112   3                afterpoint = afterpoint*0.1;
 113   3            }
 114   2            temp = temp+afterpoint;
 115   2        }
 116   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              12/30/2020 23:09:20 PAGE 3   

 117          char Precede(u8 op1,u8 op2){
 118   1        if(OpPri[op1][op2]==-1){
 119   2          return '<';
 120   2        }
 121   1        else if(OpPri[op1][op2]==0){
 122   2          return '=';
 123   2        }
 124   1        else if(OpPri[op1][op2]==1){
 125   2          return '>';
 126   2        }
 127   1        else {
 128   2          return '?';
 129   2        }
 130   1      }
 131          
 132          void PushOP(u8 op){
 133   1        Opcodepoint++;
 134   1        Opcode[Opcodepoint] = op;
 135   1      }
 136          
 137          u8 PopOP(){
 138   1        u8 op = Opcode[Opcodepoint];
 139   1        Opcodepoint--;
 140   1        return op;
 141   1      }
 142          void PushNum(){
 143   1        operandpoint++;
 144   1        Operand[operandpoint] = temp;
 145   1        //重置数字计数
 146   1        temp = 0;
 147   1        Decimalpoint= 0;   //重新开始小数
 148   1      }
 149          
 150          void Pushans(float ans){
 151   1        operandpoint++;
 152   1        Operand[operandpoint] = ans;
 153   1      }
 154          float PopNum(){
 155   1        float num = Operand[operandpoint];
 156   1        operandpoint--;
 157   1        return num;
 158   1      }
 159          float operate(float a, float b,u8 theta){
 160   1        if(theta==0){
 161   2          return a+b;
 162   2        }
 163   1        else if(theta ==1){
 164   2          return a-b;
 165   2        }
 166   1        else if(theta ==2){
 167   2          return a*b;
 168   2        }
 169   1        else 
 170   1          return a/b;
 171   1        
 172   1      }
 173          void handleOp(u8 op){
 174   1        char P = Precede(Opcode[Opcodepoint],op);
 175   1        u8 theta;
 176   1        float a, b;
 177   1        PushNum();          //todo: 如果最开始是符号有问题
 178   1        switch(P){
C51 COMPILER V9.60.0.0   MAIN                                                              12/30/2020 23:09:20 PAGE 4   

 179   2          case '<':
 180   2            PushOP(op);
 181   2            break;
 182   2          case '=':
 183   2            PopOP();
 184   2            break;
 185   2          case '>':
 186   2            theta = PopOP();
 187   2            b = PopNum();
 188   2            a = PopNum();
 189   2            Pushans(operate(a,b,theta));
 190   2            break;
 191   2          case '?':
 192   2            break;
 193   2        }
 194   1      }
 195          
 196          
 197          void Getch(){
 198   1        u8 op = KeyDown();
 199   1        while(op==127){
 200   2          op = KeyDown();
 201   2        }
 202   1        if(op!=127){
 203   2          if(isNum(op)==1){
 204   3            handleNum(op);
 205   3            LcdWriteData(op+'0');
 206   3          }
 207   2          else if(op==10){ 
 208   3            handleOp(0);
 209   3            LcdWriteData('+');
 210   3          }
 211   2          else if(op==11){
 212   3            handleOp(1);
 213   3            LcdWriteData('-');
 214   3          }
 215   2          else if(op==12){
 216   3            handleOp(2);
 217   3            LcdWriteData('*');
 218   3          }
 219   2          else if(op==13){
 220   3            handleOp(3);
 221   3            LcdWriteData('/');
 222   3          }
 223   2          else if(op==14){
 224   3            if(Decimalpoint==0){
 225   4                Decimalpoint =1;
 226   4                LcdWriteData('.');
 227   4            }
 228   3            else{
 229   4              Error();
 230   4            }
 231   3          }
 232   2          else if(op==15){
 233   3            handleOp(6);
 234   3            LcdWriteData('=');
 235   3            LcdWriteData(Operand[operandpoint]);
 236   3          }
 237   2        }
 238   1      }
 239          void main(){
 240   1        
C51 COMPILER V9.60.0.0   MAIN                                                              12/30/2020 23:09:20 PAGE 5   

 241   1        LcdInit();
 242   1        //LcdWriteData(1+'0');
 243   1        InitOpcodeStack();
 244   1        Getch();
 245   1        while(1){
 246   2            Getch();
 247   2            
 248   2        }
 249   1        
 250   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1262    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    128      24
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
