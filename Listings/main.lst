C51 COMPILER V9.60.0.0   MAIN                                                              01/03/2021 19:19:43 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Final) DEBUG OBJECTEXTEND PRINT(
                    -.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "lcd.h"
   2          #include "reg52.h"
   3          #include <intrins.h>
   4          #include <stdio.h>
   5          
   6          typedef unsigned int u16;   //对数据类型进行声明定义
   7          typedef unsigned char u8;
   8          
   9          
  10          char Outputchar[18]={48,49,50,51,52,53,54,55,56,57,43,45,42,47,40,41,46,61};
  11          
  12          float a = 0.0 , b = 0.0, c =0.0 ,ans = 0.0;
  13          
  14          u8 State = 0; //最开始在初始状态
  15          u8 add_sub_flag = 0 ; //1->'+' , 0->'-'
  16          u8 multi_div_flag = 0 ; //1->'*' , 0->'/'
  17          
  18          void printans(float a){
  19   1        u8 i ;
  20   1        char str[8];
  21   1        sprintf(str,"%f",a);
  22   1        LcdWriteCom(0xc0); //定位到第二行
  23   1        for(i= 0 ; i< 8 ; i++){
  24   2          LcdWriteData(str[i]);
  25   2        }
  26   1      }
  27          void delay(u16 i){  
  28   1        while(i--);
  29   1      }
  30          /*
  31            P17->H1
  32            P16->H2
  33            P15->H3
  34            P14->H4
  35          
  36            P13->L1
  37            P12->L2
  38            P11->L3
  39            P10->L4
  40          */
  41          #define GPIO_KEY P1 //  0000 0000
  42          #define GPIO_BUTTON P3 //独立按键使用P3
  43          sbit K1 = P3^0; sbit K2 = P3^1;
  44          sbit K3 = P3^2; sbit K4 = P3^3;
  45          sbit K5 = P3^4; sbit K6 = P3^5;
  46          sbit K7 = P3^6; sbit K8 = P3^7;
  47          u8 isNum(u8 num){
  48   1        if((num>=0)&&(num<=9))
  49   1          return 1;
  50   1        return 0;
  51   1      }
  52          
  53          u8 KeyDown(void)
  54          {
C51 COMPILER V9.60.0.0   MAIN                                                              01/03/2021 19:19:43 PAGE 2   

  55   1        u8 KeyValue= 127;
  56   1        char a=0;
  57   1        GPIO_KEY=0x0f;
  58   1        if(GPIO_KEY!=0x0f)//读取按键是否按下
  59   1        {
  60   2          delay(1000);//延时10ms进行消抖
  61   2          if(GPIO_KEY!=0x0f)//再次检测键盘是否按下
  62   2          { 
  63   3            //测试列
  64   3            GPIO_KEY=0X0F;
  65   3            switch(GPIO_KEY)
  66   3            {
  67   4              case(0X07): KeyValue=0;break;
  68   4              case(0X0b): KeyValue=1;break;
  69   4              case(0X0d): KeyValue=2;break;
  70   4              case(0X0e): KeyValue=3;break;
  71   4            }
  72   3            //测试行
  73   3            GPIO_KEY=0XF0;
  74   3            switch(GPIO_KEY)
  75   3            {
  76   4              case(0X70): KeyValue=KeyValue;break;
  77   4              case(0Xb0): KeyValue=KeyValue+4;break;
  78   4              case(0Xd0): KeyValue=KeyValue+8;break;
  79   4              case(0Xe0): KeyValue=KeyValue+12;break;
  80   4            }
  81   3            
  82   3          }
  83   2        }
  84   1        //delay(1000);
  85   1        while((a<50)&&(GPIO_KEY!=0xf0))  //检测按键松手检测
  86   1        {
  87   2          delay(140);
  88   2          a++;
  89   2        }
  90   1        return KeyValue;
  91   1      }
  92          
  93          
  94          /*
  95          从独立按键输入字符
  96          */
  97          u8 keypros(){
  98   1        
  99   1        
 100   1        GPIO_BUTTON = 0xff;
 101   1        delay(1000);
 102   1        if(K1 == 0){
 103   2          while(!K1);
 104   2          return 10;  //'+'
 105   2        }
 106   1        if(K2 == 0){
 107   2          while(!K2);
 108   2          return 11; 
 109   2        }
 110   1        if(K3 == 0){
 111   2          while(!K3);
 112   2          return 12; 
 113   2        }
 114   1        if(K4 == 0){
 115   2          while(!K4);
 116   2          return 13; 
C51 COMPILER V9.60.0.0   MAIN                                                              01/03/2021 19:19:43 PAGE 3   

 117   2        }
 118   1        if(K5 == 0){
 119   2          while(!K5);
 120   2          return 14; 
 121   2        }
 122   1        if(K6 == 0){
 123   2          while(!K6);
 124   2          return 15; 
 125   2        }
 126   1        if(K7 == 0){
 127   2          while(!K7);
 128   2          return 16; 
 129   2        }
 130   1        if(K8 == 0){
 131   2          while(!K8);
 132   2          return 17; 
 133   2        }
 134   1        return 127;
 135   1      }
 136          
 137          u8 Getch(){
 138   1        u8 op = 127;
 139   1        while(op==127){
 140   2          op = keypros();
 141   2          if(op!=127)
 142   2            return op ;
 143   2          op = KeyDown();
 144   2            if(op!=127){
 145   3          return op;
 146   3          }
 147   2        }
 148   1        return 127;
 149   1      }
 150          
 151          
 152          void function_S0(){
 153   1        u8 num = Getch();
 154   1        if(num == 17){
 155   2          LcdWriteData(Outputchar[num]);
 156   2          printans(a);
 157   2        }
 158   1        else {
 159   2          if(isNum(num)==1){
 160   3            a = a*10 +num;
 161   3          }
 162   2          else if(num == 10){  // + -
 163   3            b = 0 ;
 164   3            add_sub_flag = 1;
 165   3            State = 1;
 166   3          }
 167   2          else if(num == 11){
 168   3            b = 0 ;
 169   3            add_sub_flag = 0 ;
 170   3            State = 1;
 171   3          }
 172   2          else if(num ==12 ){
 173   3            c = 0 ;
 174   3            State = 5;
 175   3            multi_div_flag = 1;
 176   3          }// * /
 177   2          else if(num == 13){
 178   3            c = 0 ;
C51 COMPILER V9.60.0.0   MAIN                                                              01/03/2021 19:19:43 PAGE 4   

 179   3            State =5 ;
 180   3            multi_div_flag = 0;
 181   3          }
 182   2          LcdWriteData(Outputchar[num]);
 183   2        }
 184   1      }
 185          
 186            
 187          
 188          void function_S1(){
 189   1        u8 num = Getch();
 190   1        if(isNum(num)==1){
 191   2          b = num;
 192   2          State = 2;
 193   2          LcdWriteData(Outputchar[num]);
 194   2        }
 195   1        else if(num == 10){ //+
 196   2          
 197   2        }
 198   1        else if(num == 11){ //-
 199   2        }
 200   1        else {
 201   2        }
 202   1      }
 203          
 204          void function_S2(){
 205   1        u8 num = Getch();
 206   1        if(num==17){
 207   2          State = 0;
 208   2          if(add_sub_flag ==1){
 209   3            a = a+b;
 210   3          }
 211   2          else 
 212   2            a = a-b;
 213   2          LcdWriteData(Outputchar[num]);
 214   2          printans(a);
 215   2        }
 216   1        else{
 217   2          if(isNum(num) == 1){
 218   3            b = b*10 + num;
 219   3          }
 220   2          else if (num== 12){  //*
 221   3            c = 0;
 222   3            State = 3;
 223   3            multi_div_flag = 1;
 224   3          }
 225   2          else if (num == 13){ // /
 226   3            c = 0;
 227   3            State = 3; 
 228   3            multi_div_flag = 0;
 229   3            LcdWriteData(Outputchar[num]);
 230   3          }
 231   2          else if (num == 10){
 232   3            if(add_sub_flag ==1){
 233   4              a = a+b;
 234   4            }
 235   3            else 
 236   3              a = a-b;
 237   3            State = 1;
 238   3            add_sub_flag = 1;
 239   3          }
 240   2          else if (num == 11){
C51 COMPILER V9.60.0.0   MAIN                                                              01/03/2021 19:19:43 PAGE 5   

 241   3            if(add_sub_flag ==1){
 242   4              a = a+b;
 243   4            }
 244   3            else 
 245   3              a = a-b;
 246   3            State = 1;
 247   3            add_sub_flag = 0;
 248   3            }
 249   2          LcdWriteData(Outputchar[num]);
 250   2        }
 251   1      }
 252          
 253          void function_S3(){
 254   1        u8 num = Getch();
 255   1        if(isNum(num)==1){
 256   2          c = num;
 257   2          State = 4;
 258   2        }
 259   1        else {
 260   2        }
 261   1      }
 262          
 263          void function_S4(){
 264   1        u8 num = Getch();
 265   1        if(isNum(num)==1){
 266   2          c = c*10+num;
 267   2        }
 268   1        else if(num == 10){ // +
 269   2          if(add_sub_flag == 1){
 270   3            if(multi_div_flag ==1)
 271   3              a= a+b*c;
 272   3            else
 273   3              a= a+b/c;
 274   3          }
 275   2          else{ 
 276   3            if(multi_div_flag ==1)
 277   3              a= a-b*c;
 278   3            else
 279   3              a= a-b/c;
 280   3          }
 281   2          b = 0 ; 
 282   2          c = 0;
 283   2          add_sub_flag = 1;
 284   2          State = 1;
 285   2        }
 286   1        else if(num == 11){
 287   2          if(add_sub_flag == 1){
 288   3            if(multi_div_flag ==1)
 289   3              a= a+b*c;
 290   3            else
 291   3              a= a+b/c;
 292   3          }
 293   2          else{ 
 294   3            if(multi_div_flag ==1)
 295   3              a= a-b*c;
 296   3            else
 297   3              a= a-b/c;
 298   3          }
 299   2          b = 0 ; 
 300   2          c = 0;
 301   2          add_sub_flag = 0;
 302   2          State = 1;
C51 COMPILER V9.60.0.0   MAIN                                                              01/03/2021 19:19:43 PAGE 6   

 303   2        }
 304   1        else if(num == 12){ //*
 305   2          if(multi_div_flag == 1){
 306   3            b = b*c ;
 307   3          }
 308   2          else 
 309   2            b = b/c;
 310   2          c = 0 ;
 311   2          State =3;
 312   2          multi_div_flag = 1;
 313   2        }
 314   1        else if(num == 13){ // /
 315   2          if(multi_div_flag == 1){
 316   3            b = b*c ;
 317   3          }
 318   2          else 
 319   2            b = b/c;
 320   2          c = 0 ;
 321   2          State =3;
 322   2          multi_div_flag = 0;
 323   2        }
 324   1        else if(num == 17){
 325   2          if(add_sub_flag == 1){
 326   3            if(multi_div_flag ==1)
 327   3              a= a+b*c;
 328   3            else
 329   3              a= a+b/c;
 330   3          }
 331   2          else{ 
 332   3            if(multi_div_flag ==1)
 333   3              a= a-b*c;
 334   3            else
 335   3              a= a-b/c;
 336   3          }
 337   2          b = 0 ; 
 338   2          c = 0;
 339   2          add_sub_flag = 0;
 340   2          State = 0;
 341   2        }
 342   1        if(num!=17){
 343   2          LcdWriteData(Outputchar[num]);
 344   2        }
 345   1        else{
 346   2          LcdWriteData(Outputchar[num]);
 347   2          printans(a);
 348   2        }
 349   1      }
 350          
 351          void function_S5(){
 352   1        u8 num = Getch();
 353   1      }
 354          
 355          void function_S6(){
 356   1        u8 num = Getch();
 357   1      }
 358          void function_S7(){
 359   1        u8 num = Getch();
 360   1      }
 361          void main(){
 362   1        LcdInit();
 363   1        while(1){
 364   2          switch(State){
C51 COMPILER V9.60.0.0   MAIN                                                              01/03/2021 19:19:43 PAGE 7   

 365   3            case 0:
 366   3              function_S0();
 367   3              break;
 368   3            case 1:
 369   3              function_S1();
 370   3              break;
 371   3            case 2:
 372   3              function_S2();
 373   3              break;
 374   3            case 3:
 375   3              function_S3();
 376   3              break;
 377   3            case 4:
 378   3              function_S4();
 379   3              break;
 380   3            case 5:
 381   3              function_S5();
 382   3              break;
 383   3            case 6:
 384   3              function_S6();
 385   3              break;
 386   3            case 7:
 387   3              function_S7(); //结果状态
 388   3              break;  
 389   3          }
 390   2        }
 391   1        
 392   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1899    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
